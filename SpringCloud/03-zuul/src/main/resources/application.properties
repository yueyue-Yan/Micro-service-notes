
#修改内置tomcat上下文和端口号
server.port=5001
server.servlet.context-path=/

#客户端
#设置 注册到注册中心的微服务名称
spring.application.name=03-zuul
#注册中心的地址
#即使是单个节点，也会想集群中的各个注册中心节点进行注册
#如果6001故障，那么还可以使用6002进行连接
eureka.client.service-url.defaultZone=http://localhost:6001/eureka,http://localhost:6002/eureka
#向 注册中心的微服务节点 中注册自己（客户端）默认值是true
eureka.client.register-with-eureka=true
#使用IP地址注册服务
eureka.instance.prefer-ip-address=true
#拉取 来自注册中心的 服务地址列表（客户端）默认值是true
eureka.client.fetch-registry=true
#心跳机制交互的时间
eureka.instance.lease-renewal-interval-in-seconds=30
#超时后从列表剔除的时间
eureka.instance.lease-expiration-duration-in-seconds=90

# Zuul网关配置
# 路由相关的配置内容
# Map<String, ZuulProperties.ZuulRoute> routes
#   ZuulRoute：
#     private String id; 唯一标识，可以省略
#     private String path; 拦截的url，支持通配规则，*、**，只支持单个的url拦截规则
#     private String serviceId; 转发微服务的名称(不常用)
#     private String url; 转发微服务的地址(常用)
#     private boolean stripPrefix = true; 是否截取拦截前缀，默认是true，即去掉拦截的前缀
#     private boolean stripPrefix = true;  便于记忆：浏览器发送请求时是否添加前缀，true添加，false不加
zuul.routes.toBaidu.path=/
zuul.routes.toBaidu.url= https://www.baidu.com
# 当出现相同的拦截路径时，后加载的会将先加载的覆盖（即以最后为准）
zuul.routes.toBaiduNews.path=/
zuul.routes.toBaiduNews.url= http://news.baidu.com
# 不支持多个路径的拦截规则
# path: /, /guonei, /guoji
zuul.routes.toBaiduNewsGuoNei.path=/guonei
zuul.routes.toBaiduNewsGuoNei.url=http://news.baidu.com
zuul.routes.toBaiduNewsGuoJi.path=/guoji
zuul.routes.toBaiduNewsGuoJi.url=http://news.baidu.com


zuul.routes.toConsumer8002.path=/api/**
#zuul.routes.toConsumer8002.path=/consumer/**
zuul.routes.toConsumer8002.url= http://localhost:8002

# 去掉拦截的前缀路径
# 浏览器发送的请求：                  http://localhost:5001/api/consumer/02

# 去掉拦截的前缀路径后，将请求进行转发：http://localhost:5001/consumer/02
# 路由到消费者工程：                   http://localhost:8002/consumer/02
zuul.routes.toConsumer8002.stripPrefix=true 

# 不会去除掉拦截的前缀路径，
# 浏览器发送的请求：http://localhost:5001/consumer/02
# 路由到消费者工程：http://localhost:8002/consumer/02
# stripPrefix: false
